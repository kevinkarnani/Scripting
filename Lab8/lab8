Lab 8

1.1) 
	i) "Hide implementation details" means the client shouldn't need to see how the code works. All the client needs to know is what gets passed in and what the code does.
	ii) "Choose a small orthogonal set of primitives" means that program functions shouldn't have multiple implementations.
	iii) "Don't reach behind the user's back" means that all code should be documented properly and that all side effects should be made known to the client.
	iv) "Do the same thing the same way everywhere" means that all code should be written in a consistent manner to maintain code legibility and to avoid confusion.

1.2) Max chars/fields per line are statically set. Nested quotes and embedded commas handled improperly. Cannot tell difference between empty literal and null.

1.3) Dynamic chars/fields per line. Separated code into functions, improving legibility. Handle nested quotes and embedded commas well.

1.4) Still using global/static variables. Since this is the case, calling two instances of the script would cause a collision. Still improperly handles empty lines.

1.5) The use of a struct here helps with running multiple instances of the script as the code follows OOP/OOD. Also, the empty line issue is eliminated.

1.6) Yes, it does follow the guidelines from the notes. Consistent style, a single implementation for each functionality, vars are encapsulated, and well documented.

1.7) See csv.c
